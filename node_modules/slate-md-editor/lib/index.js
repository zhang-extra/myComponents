"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MarkdownPlugin = void 0;

var React = _interopRequireWildcard(require("react"));

var _antd = require("antd");

var _slateReact = require("slate-react");

var _slatePrism = _interopRequireDefault(require("slate-prism"));

var _slateEditBlockquote = _interopRequireDefault(require("slate-edit-blockquote"));

var _slateEditList = _interopRequireDefault(require("slate-edit-list"));

var _slateEditCode = _interopRequireDefault(require("slate-edit-code"));

var _slateHelperBlockList = require("@canner/slate-helper-block-list");

var _blocks = _interopRequireDefault(require("markup-it/lib/constants/blocks"));

var _marks = _interopRequireDefault(require("markup-it/lib/constants/marks"));

var _inlines = _interopRequireDefault(require("markup-it/lib/constants/inlines"));

var _slateIconBlockquote = require("@canner/slate-icon-blockquote");

var _slateIconList = require("@canner/slate-icon-list");

var _slateIconCodeblock = require("@canner/slate-icon-codeblock");

var _slateIconHr = require("@canner/slate-icon-hr");

var _slateIconLink = require("@canner/slate-icon-link");

var _slateIconImage = require("@canner/slate-icon-image");

var _slateIconHeader = require("@canner/slate-icon-header");

var _slateIconShared = require("@canner/slate-icon-shared");

var _slateIconBold = require("@canner/slate-icon-bold");

var _slateIconCode = require("@canner/slate-icon-code");

var _slateIconStrikethrough = require("@canner/slate-icon-strikethrough");

var _slateIconUnderline = require("@canner/slate-icon-underline");

var _slateIconItalic = require("@canner/slate-icon-italic");

var _slateMdPlugin = _interopRequireDefault(require("@canner/slate-md-plugin"));

var _slatePasteHtmlPlugin = _interopRequireDefault(require("@canner/slate-paste-html-plugin"));

require("prismjs/themes/prism.css");

require("github-markdown-css");

var _slateEditorHelp = _interopRequireDefault(require("@canner/slate-editor-help"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 18px;\n  cursor: pointer;\n  color: #ccc;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var MarkdownPlugin = _slateMdPlugin.default;
exports.MarkdownPlugin = MarkdownPlugin;

var Helper = _styledComponents.default.div(_templateObject());

var _default = function _default() {
  var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var options = Object.assign({
    markdownOption: {
      blocks: Object.assign(_blocks.default, opt.blocks),
      marks: Object.assign(_marks.default, opt.marks),
      inlines: Object.assign(_inlines.default, opt.inlines)
    },
    prismOption: {
      onlyIn: function onlyIn(node) {
        return node.type === _blocks.default.CODE;
      },
      getSyntax: function getSyntax(node) {
        return node.data.get("syntax");
      }
    },
    codeOption: {
      onlyIn: function onlyIn(node) {
        return node.type === _blocks.default.CODE;
      }
    },
    blockquoteOption: {},
    listOption: _slateHelperBlockList.DEFAULT
  }, opt);
  var mdEditorPlugins = [MarkdownPlugin(options.markdownOption), (0, _slatePrism.default)(options.prismOption), (0, _slateEditCode.default)(options.codeOption), (0, _slateEditBlockquote.default)(options.blockquoteOption), (0, _slateEditList.default)(options.listOption), (0, _slateIconBlockquote.BlockquotePlugin)(options.blockquoteOption), (0, _slateIconList.ListPlugin)(options.listOption), (0, _slateIconCodeblock.CodeBlockPlugin)(options.codeOption), (0, _slateIconHr.HrPlugin)(), (0, _slateIconLink.LinkPlugin)(), (0, _slateIconImage.ImagePlugin)(), (0, _slateIconHeader.HeaderOnePlugin)(), (0, _slateIconHeader.HeaderTwoPlugin)(), (0, _slateIconHeader.HeaderThreePlugin)(), (0, _slateIconHeader.HeaderFourPlugin)(), (0, _slateIconHeader.HeaderFivePlugin)(), (0, _slateIconHeader.HeaderSixPlugin)(), (0, _slateIconShared.ParagraphPlugin)(), (0, _slateIconBold.BoldPlugin)(), (0, _slateIconCode.CodePlugin)(), (0, _slateIconStrikethrough.StrikeThroughPlugin)(), (0, _slateIconUnderline.UnderlinePlugin)(), (0, _slateIconItalic.ItalicPlugin)(), (0, _slatePasteHtmlPlugin.default)()];
  return (
    /*#__PURE__*/
    function (_React$Component) {
      _inherits(MdEditor, _React$Component);

      function MdEditor(props) {
        var _this;

        _classCallCheck(this, MdEditor);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(MdEditor).call(this, props));

        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
          showMenu: false
        });

        _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "changeVisibleMenu", function (visible) {
          _this.setState({
            showMenu: visible
          });
        });

        _this.plugins = mdEditorPlugins.concat(_toConsumableArray(_this.props.plugins || []));
        return _this;
      }

      _createClass(MdEditor, [{
        key: "render",
        value: function render() {
          var _this2 = this;

          var showMenu = this.state.showMenu;

          var _this$props = this.props,
              value = _this$props.value,
              onChange = _this$props.onChange,
              plugins = _this$props.plugins,
              rest = _objectWithoutProperties(_this$props, ["value", "onChange", "plugins"]); // eslint-disable-line


          return React.createElement("div", {
            className: "markdown-body",
            style: {
              position: "relative"
            }
          }, React.createElement(_slateReact.Editor, _extends({
            value: value,
            plugins: this.plugins,
            onChange: onChange
          }, rest)), React.createElement(Helper, {
            onClick: function onClick() {
              return _this2.changeVisibleMenu(true);
            }
          }, React.createElement(_antd.Icon, {
            type: "question-circle",
            theme: "outlined"
          }), React.createElement("span", {
            style: {
              fontSize: "15px",
              marginLeft: "5px"
            }
          }, "Help")), React.createElement(_antd.Modal, {
            visible: showMenu,
            style: {
              width: "800px"
            },
            footer: null,
            onCancel: function onCancel() {
              return _this2.changeVisibleMenu(false);
            },
            title: "Help Menu"
          }, React.createElement(_slateEditorHelp.default, null)));
        }
      }]);

      return MdEditor;
    }(React.Component)
  );
};

exports.default = _default;