'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Dimensions = (0, _radium2.default)(_class = function (_React$Component) {
  _inherits(Dimensions, _React$Component);

  function Dimensions(props) {
    _classCallCheck(this, Dimensions);

    var _this = _possibleConstructorReturn(this, (Dimensions.__proto__ || Object.getPrototypeOf(Dimensions)).call(this, props));

    _this.setTranslate = _this.setTranslate.bind(_this);

    _this.state = {
      show: false,
      x: 0,
      y: 0,
      data: {
        rowNumber: 0,
        columnNumber: 0
      }
    };
    return _this;
  }

  _createClass(Dimensions, [{
    key: 'hideDimensions',
    value: function hideDimensions() {
      this.setState({ show: false });
    }
  }, {
    key: 'setTranslate',
    value: function setTranslate(x, y, data) {
      this.setState({
        show: true,
        x: x, y: y, data: data
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          show = _state.show,
          x = _state.x,
          y = _state.y,
          data = _state.data;


      var dimensionStyle = _styles2.default[this.props.theme].dimensions;
      var position = {
        left: x,
        top: y
      };

      return show ? React.createElement(
        'div',
        { style: [dimensionStyle, position] },
        data.columnNumber + 1,
        React.createElement(
          'span',
          { style: { padding: '0 3px' } },
          'x'
        ),
        data.rowNumber + 1
      ) : null;
    }
  }]);

  return Dimensions;
}(React.Component)) || _class;

exports.default = Dimensions;