'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\n  width: 100%;\n  min-height: ', 'px;\n  display: table-row;\n  vertical-align: top;\n  box-sizing: inherit;\n  -moz-box-sizing: inherit;\n  -webkit-box-sizing: inherit;\n'], ['\n  width: 100%;\n  min-height: ', 'px;\n  display: table-row;\n  vertical-align: top;\n  box-sizing: inherit;\n  -moz-box-sizing: inherit;\n  -webkit-box-sizing: inherit;\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  width: auto;\n  height: auto;\n  box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  display: flex;\n'], ['\n  width: auto;\n  height: auto;\n  box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  display: flex;\n']);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var OutterContainer = _styledComponents2.default.div(_templateObject, function (props) {
  return props.rowHeight;
});

var InnerContainer = _styledComponents2.default.div(_templateObject2);

var DivRow = function (_React$Component) {
  _inherits(DivRow, _React$Component);

  function DivRow(props) {
    _classCallCheck(this, DivRow);

    var _this = _possibleConstructorReturn(this, (DivRow.__proto__ || Object.getPrototypeOf(DivRow)).call(this, props));

    _this.validColumnChildren = _this.validColumnChildren.bind(_this);
    return _this;
  }

  _createClass(DivRow, [{
    key: 'validColumnChildren',
    value: function validColumnChildren(children) {
      var _props = this.props,
          rowHeight = _props.rowHeight,
          width = _props.width;

      var rows = [];
      var i = 0;

      if (!children) {
        return;
      }
      var amountChildren = React.Children.toArray(children).length;
      var restWidth = width;

      React.Children.forEach(children, function (child) {
        var childCellWidth = child.props.cellWidth;
        if (childCellWidth) {
          restWidth -= childCellWidth;
          --amountChildren;
        }
      });

      React.Children.forEach(children, function (child) {
        var childCellWidth = child.props.cellWidth;
        if (child === null) {
          return;
        }

        var displayName = React.isValidElement(child) ? child.type.displayName : '';

        (0, _warning2.default)(displayName === 'DivCell', "Inside DivRow component should only have 'DivCell' component as children"); // eslint-disable-line max-len

        rows.push(React.cloneElement(child, {
          rowHeight: rowHeight,
          key: ++i,
          cellWidth: childCellWidth ? childCellWidth : restWidth / amountChildren
        }));
      });

      return rows;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          outerStyle = _props2.outerStyle,
          style = _props2.style,
          rowHeight = _props2.rowHeight,
          children = _props2.children,
          rest = _objectWithoutProperties(_props2, ['outerStyle', 'style', 'rowHeight', 'children']);

      return React.createElement(
        OutterContainer,
        _extends({
          style: outerStyle,
          rowHeight: rowHeight
        }, rest),
        React.createElement(
          InnerContainer,
          { style: style },
          this.validColumnChildren(children)
        )
      );
    }
  }]);

  return DivRow;
}(React.Component);

DivRow.displayName = 'DivRow';
exports.default = DivRow;