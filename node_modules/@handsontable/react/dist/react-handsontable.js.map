{"version":3,"file":"react-handsontable.js","sources":["../../src/common/settingsMapper.ts","../../src/common/index.tsx"],"sourcesContent":["import Handsontable from 'hot-alias';\nimport { HotTableProps } from './index';\n\nexport class SettingsMapper {\n  private registeredHooks: string[];\n\n  constructor() {\n    this.registeredHooks = Handsontable.hooks.getRegistered();\n  }\n\n  /**\n   * Parse component settings into Handosntable-compatible settings.\n   *\n   * @param {Object} properties Object containing properties from the HotTable object.\n   * @returns {Object} Handsontable-compatible settings object.\n   */\n  getSettings(properties: HotTableProps): Handsontable.DefaultSettings {\n    let newSettings: Handsontable.DefaultSettings = {};\n\n    if (properties.settings) {\n      let settings = properties.settings;\n      for (const key in settings) {\n        if (settings.hasOwnProperty(key)) {\n          newSettings[key] = settings[key];\n        }\n      }\n    }\n\n    for (const key in properties) {\n      if (key !== 'settings' && properties.hasOwnProperty(key)) {\n        newSettings[key] = properties[key];\n      }\n    }\n\n    return newSettings;\n  }\n}\n","import React from 'react';\nimport Handsontable from 'hot-alias';\nimport { SettingsMapper } from './settingsMapper';\nimport * as packageJson from './../../package.json';\n\n/**\n * Interface for the `prop` of the HotTable component - extending the default Handsontable settings with additional,\n * component-related properties.\n */\nexport interface HotTableProps extends Handsontable.DefaultSettings {\n  data?: any[][] | object[];\n  id?: string,\n  className?: string,\n  style?: React.CSSProperties,\n  settings?: Handsontable.DefaultSettings\n}\n\n/**\n * A Handsontable-ReactJS wrapper.\n *\n * To implement, use the `HotTable` tag with properties corresponding to Handsontable options.\n * For example:\n *\n * ```js\n * <HotTable id=\"hot\" data={dataObject} contextMenu={true} colHeaders={true} width={600} height={300} stretchH=\"all\" />\n *\n * // is analogous to\n * let hot = new Handsontable(document.getElementById('hot'), {\n *    data: dataObject,\n *    contextMenu: true,\n *    colHeaders: true,\n *    width: 600\n *    height: 300\n * });\n *\n * ```\n *\n * @class HotTable\n */\nexport class HotTable extends React.Component<HotTableProps, {}> {\n  /**\n   * Reference to the `SettingsMapper` instance.\n   *\n   * @type {SettingsMapper}\n   */\n  private settingsMapper: SettingsMapper = new SettingsMapper();\n  /**\n   * Component props.\n   *\n   * @type {HotTableProps}\n   */\n  props: HotTableProps;\n  /**\n   * The `id` of the main Handsontable DOM element.\n   *\n   * @type {String}\n   */\n  id: string = null;\n  /**\n   * Reference to the Handsontable instance.\n   *\n   * @type {Object}\n   */\n  hotInstance: Handsontable = null;\n  /**\n   * Reference to the main Handsontable DOM element.\n   *\n   * @type {HTMLElement}\n   */\n  hotElementRef: HTMLElement = null;\n  /**\n   * Class name added to the component DOM element.\n   *\n   * @type {String}\n   */\n  className: string;\n  /**\n   * Style object passed to the component.\n   *\n   * @type {React.CSSProperties}\n   */\n  style: React.CSSProperties;\n\n  static get version(): string {\n    return (packageJson as any).version;\n  }\n\n  /**\n   * Set the reference to the main Handsontable DOM element.\n   *\n   * @param {HTMLElement} element The main Handsontable DOM element.\n   */\n  private setHotElementRef(element: HTMLElement): void {\n    this.hotElementRef = element;\n  }\n\n  /**\n   * Initialize Handsontable after the component has mounted.\n   */\n  componentDidMount() {\n    const newSettings = this.settingsMapper.getSettings(this.props);\n    this.hotInstance = new Handsontable(this.hotElementRef, newSettings);\n  }\n\n  /**\n   * Call the `updateHot` method and prevent the component from re-rendering the instance.\n   *\n   * @param {Object} nextProps\n   * @param {Object} nextState\n   * @returns {Boolean}\n   */\n  shouldComponentUpdate(nextProps: HotTableProps, nextState: {}): boolean {\n    this.updateHot(this.settingsMapper.getSettings(nextProps));\n\n    return false;\n  }\n\n  /**\n   * Destroy the Handsontable instance when the parent component unmounts.\n   */\n  componentWillUnmount() {\n    this.hotInstance.destroy();\n  }\n\n  /**\n   * Render the table.\n   */\n  render() {\n    this.id = this.props.id || 'hot-' + Math.random().toString(36).substring(5);\n    this.className = this.props.className || '';\n    this.style = this.props.style || {};\n\n    return <div ref={this.setHotElementRef.bind(this)} id={this.id} className={this.className} style={this.style}></div>\n  }\n\n  /**\n   * Call the `updateSettings` method for the Handsontable instance.\n   *\n   * @param {Object} newSettings The settings object.\n   */\n  private updateHot(newSettings: Handsontable.DefaultSettings): void {\n    this.hotInstance.updateSettings(newSettings, false);\n  }\n}\n"],"names":["registeredHooks","Handsontable","hooks","getRegistered","properties","newSettings","settings","key","hasOwnProperty","SettingsMapper","element","hotElementRef","settingsMapper","getSettings","props","hotInstance","nextProps","nextState","updateHot","destroy","id","Math","random","toString","substring","className","style","React","ref","setHotElementRef","bind","updateSettings","packageJson","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAGA;;;;aAISA,eAAL,GAAuBC,aAAaC,KAAb,CAAmBC,aAAnB,EAAvB;;;;;;;;;;;;oCASUC,UAbd;gBAcQC,cAA4C,EAAhD;gBAEID,WAAWE,QAAf,EAAyB;oBACnBA,WAAWF,WAAWE,QAA1B;qBACK,IAAMC,GAAX,IAAkBD,QAAlB,EAA4B;wBACtBA,SAASE,cAAT,CAAwBD,GAAxB,CAAJ,EAAkC;oCACpBA,GAAZ,IAAmBD,SAASC,GAAT,CAAnB;;;;iBAKD,IAAMA,IAAX,IAAkBH,UAAlB,EAA8B;oBACxBG,SAAQ,UAAR,IAAsBH,WAAWI,cAAX,CAA0BD,IAA1B,CAA1B,EAA0D;gCAC5CA,IAAZ,IAAmBH,WAAWG,IAAX,CAAnB;;;mBAIGF,WAAP;;;;;;;;ACjBJ;;;;;;;;;;;;;;;;;;;;;;AAsBA,YAAA;;;;;;;;;;;;;wBAMU,GAAiC,IAAII,cAAJ,EAAjC;;;;;;YAYR,GAAa,IAAb;;;;;;qBAMA,GAA4B,IAA5B;;;;;;uBAMA,GAA6B,IAA7B;;;;;;;;;;;;qCAuByBC,OArD3B;WAsDSC,aAAL,GAAqBD,OAArB;;;;;;;;;UAOML,cAAc,KAAKO,cAAL,CAAoBC,WAApB,CAAgC,KAAKC,KAArC,CAApB;WACKC,WAAL,GAAmB,IAAId,YAAJ,CAAiB,KAAKU,aAAtB,EAAqCN,WAArC,CAAnB;;;;;;;;;;;;0CAUoBW,SAxExB,EAwEkDC,SAxElD;WAyESC,SAAL,CAAe,KAAKN,cAAL,CAAoBC,WAApB,CAAgCG,SAAhC,CAAf;aAEO,KAAP;;;;;;;;;WAOKD,WAAL,CAAiBI,OAAjB;;;;;;;;;WAOKC,EAAL,GAAU,KAAKN,KAAL,CAAWM,EAAX,IAAiB,SAASC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAApC;WACKC,SAAL,GAAiB,KAAKX,KAAL,CAAWW,SAAX,IAAwB,EAAzC;WACKC,KAAL,GAAa,KAAKZ,KAAL,CAAWY,KAAX,IAAoB,EAAjC;aAEOC,mBAAA,MAAA,IAAKC,KAAK,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,GAAkCV,IAAI,KAAKA,IAAIK,WAAW,KAAKA,WAAWC,OAAO,KAAKA,OAAhG,CAAP;;;;;;;;;;8BAQgBrB,WArGpB;WAsGSU,WAAL,CAAiBgB,cAAjB,CAAgC1B,WAAhC,EAA6C,KAA7C;;;;;aAzDQ2B,OAAR;;;;EA7C0BL,MAAMM,SAApC;;;;;;;;;;;;"}