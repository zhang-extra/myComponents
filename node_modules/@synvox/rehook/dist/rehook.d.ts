/**
 * 
 * @param condition
 * @param left
 * @param right
 * @returns
 */
declare function branch(condition: Function, left: Function, right: Function): Function;

/**
 * 
 * @param component
 * @returns
 */
declare function catchRender(component: Function): Object;

/**
 * 
 * @param defaultProps
 * @returns
 */
declare function defaultProps(defaultProps: Object): Object;

/**
 * 
 * @param propName
 * @returns
 */
declare function flattenProp(propName: string | symbol): Object;

/**
 * 
 * @param spec
 * @returns
 */
declare function lifecycle(spec: Object): Object;

/**
 * 
 * @param fn
 * @returns
 */
declare function mapProps(fn: Function): Object;

/**
 * 
 * @param propName
 * @param enhance
 * @returns
 */
declare function namespace(propName: string | symbol, enhance: Function): Object;

/**
 * 
 * @param fns
 * @returns
 */
declare function pipe(...fns: Function): Object;

/**
 * 
 * @param a
 * @param b
 * @returns
 */
declare function renameProp(a: string | symbol, b: string | symbol): Object;

/**
 * 
 * @param propMap
 * @returns
 */
declare function renameProps(propMap: Object): Object;

/**
 * 
 * @param comp
 * @returns
 */
declare function renderComponent(comp: any): Object;

/**
 * 
 * @returns
 */
declare function renderNothing(): Object;

/**
 * 
 * @param handlers
 * @returns
 */
declare function withHandlers(handlers: Object): Object;

/**
 * 
 * @param shouldMapOrKeys
 * @param createProps
 * @returns
 */
declare function withPropsOnChange(shouldMapOrKeys: any, createProps: Function): Object;

/**
 * 
 * @param fn
 */
declare function withProps(fn: Function | Object): void;

/**
 * 
 * @param stateName
 * @param dispatchName
 * @param reducer
 * @param initialValue
 */
declare function withReducer(stateName: string | symbol, dispatchName: string | symbol, reducer: Function, initialValue: any): void;

/**
 * 
 * @param initialValue
 * @param handlers
 * @returns
 */
declare function withStateHandlers(initialValue: any, handlers: Object): Object;

/**
 * 
 * @param stateName
 * @param stateUpdaterName
 * @param initialState
 */
declare function withState(stateName: string | symbol, stateUpdaterName: string | symbol, initialState: any): void;

