"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ToolbarItem = exports.Toolbar = void 0;

var React = _interopRequireWildcard(require("react"));

var _antd = require("antd");

var _quillIcons = _interopRequireDefault(require("quill-icons"));

var _trashO = _interopRequireDefault(require("react-icons/lib/fa/trash-o"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _slateEditTable = _interopRequireDefault(require("slate-edit-table"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  color: #fff;\n  padding: 3px;\n  margin: 3px;\n  background-image: linear-gradient(180deg, #464646, #151515);\n  font-size: 16px;\n  border-radius: 5px;\n  display: inline-flex;\n  cursor: pointer;\n\n  .__table-quill-class {\n    margin: 2px;\n  }\n\n  .__table-quill-fa-class {\n    margin: 3px;\n  }\n\n  .__table-quill-fill {\n    fill: #fff;\n  }\n\n  .__table-quill-transparent {\n    fill: #ccc;\n  }\n\n  .__table-quill-row-transparent {\n    fill: #151515;\n  }\n\n  .__table-quill-stroke {\n    stroke: #fff;\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  z-index: 1000;\n  display: block;\n  position: absolute;\n  right: 10px;\n  top: -40px;\n  z-index: 100;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n  border: 2px solid #ef6942;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var TableActiveContainer = _styledComponents.default.div(_templateObject());

var Toolbar = _styledComponents.default.span(_templateObject2());

exports.Toolbar = Toolbar;

var ToolbarItem = _styledComponents.default.span(_templateObject3());

exports.ToolbarItem = ToolbarItem;

var Table =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Table, _React$Component);

  function Table(props) {
    var _this;

    _classCallCheck(this, Table);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onRemove", function () {
      var change = _this.props.editor.change;
      change(_this.editTable.changes.removeTable);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onRemoveColumn", function () {
      var change = _this.props.editor.change;
      change(_this.editTable.changes.removeColumn);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onRemoveRow", function () {
      var change = _this.props.editor.change;
      change(_this.editTable.changes.removeRow);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onInsertColumn", function () {
      var change = _this.props.editor.change;
      change(_this.editTable.changes.insertColumn);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onInsertRow", function () {
      var change = _this.props.editor.change;
      change(_this.editTable.changes.insertRow);
    });

    _this.editTable = (0, _slateEditTable.default)(props.tableOptions);
    return _this;
  }

  _createClass(Table, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          attributes = _this$props.attributes,
          children = _this$props.children,
          isSelected = _this$props.isSelected,
          readOnly = _this$props.readOnly;

      if (!isSelected || readOnly) {
        return React.createElement("table", null, React.createElement("tbody", attributes, children));
      }

      return React.createElement(TableActiveContainer, null, React.createElement(Toolbar, null, React.createElement(ToolbarItem, null, React.createElement(_antd.Tooltip, {
        title: "Remove column"
      }, React.createElement(_quillIcons.default.TableDeleteColumns, {
        onMouseDown: function onMouseDown(e) {
          return e.preventDefault();
        },
        onClick: this.onRemoveColumn,
        className: "__table-quill-class",
        fillClassName: "__table-quill-fill",
        transparentClassName: "__table-quill-transparent"
      }))), React.createElement(ToolbarItem, null, React.createElement(_antd.Tooltip, {
        title: "Remove row"
      }, React.createElement(_quillIcons.default.TableDeleteRows, {
        onMouseDown: function onMouseDown(e) {
          return e.preventDefault();
        },
        onClick: this.onRemoveRow,
        className: "__table-quill-class",
        strokeClassName: "__table-quill-stroke",
        fillClassName: "__table-quill-fill",
        transparentClassName: "__table-quill-row-transparent"
      }))), React.createElement(ToolbarItem, null, React.createElement(_antd.Tooltip, {
        title: "Insert column"
      }, React.createElement(_quillIcons.default.TableInsertColumns, {
        onMouseDown: function onMouseDown(e) {
          return e.preventDefault();
        },
        onClick: this.onInsertColumn,
        className: "__table-quill-class",
        fillClassName: "__table-quill-fill",
        transparentClassName: "__table-quill-transparent"
      }))), React.createElement(ToolbarItem, null, React.createElement(_antd.Tooltip, {
        title: "Insert row"
      }, React.createElement(_quillIcons.default.TableInsertRows, {
        onMouseDown: function onMouseDown(e) {
          return e.preventDefault();
        },
        onClick: this.onInsertRow,
        className: "__table-quill-class",
        strokeClassName: "__table-quill-stroke",
        fillClassName: "__table-quill-fill",
        transparentClassName: "__table-quill-row-transparent"
      }))), React.createElement(ToolbarItem, null, React.createElement(_antd.Tooltip, {
        title: "Remove table"
      }, React.createElement(_trashO.default, {
        onMouseDown: function onMouseDown(e) {
          return e.preventDefault();
        },
        onClick: this.onRemove,
        className: "__table-quill-fa-class"
      })))), React.createElement("table", null, React.createElement("tbody", attributes, children)));
    }
  }]);

  return Table;
}(React.Component);

exports.default = Table;