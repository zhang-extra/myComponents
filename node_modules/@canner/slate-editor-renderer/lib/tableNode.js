"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tableCellNode = exports.tableRowNode = exports.tableNode = void 0;

var React = _interopRequireWildcard(require("react"));

var _table = _interopRequireDefault(require("./components/table"));

var _lodash = _interopRequireDefault(require("lodash.mapvalues"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var tableNode = function tableNode(options) {
  return function (props) {
    return React.createElement(_table.default, _extends({}, props, {
      tableOptions: options
    }));
  };
};

exports.tableNode = tableNode;

var tableRowNode = function tableRowNode() {
  return function (_ref) {
    var attributes = _ref.attributes,
        children = _ref.children;
    return React.createElement("tr", attributes, children);
  };
};

exports.tableRowNode = tableRowNode;

var tableCellNode = function tableCellNode(stylesAttr) {
  return function (_ref2) {
    var attributes = _ref2.attributes,
        children = _ref2.children,
        node = _ref2.node;
    return React.createElement("td", _extends({
      style: Object.assign((0, _lodash.default)(stylesAttr, function (val) {
        return val && val(node);
      }), {
        minWidth: "50px"
      })
    }, attributes), children);
  };
};

exports.tableCellNode = tableCellNode;