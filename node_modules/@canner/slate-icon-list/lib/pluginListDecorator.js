"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _slateHelperBlockList = _interopRequireWildcard(require("@canner/slate-helper-block-list"));

var _slateEditList = _interopRequireDefault(require("slate-edit-list"));

var _blocks = require("@canner/slate-constant/lib/blocks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var isList = (0, _slateEditList.default)(_slateHelperBlockList.DEFAULT).utils.isList;

var _default = function _default(type, defaultIcon) {
  return function (Block) {
    return (
      /*#__PURE__*/
      function (_React$Component) {
        _inherits(pluginDecoration, _React$Component);

        function pluginDecoration(props) {
          var _this;

          _classCallCheck(this, pluginDecoration);

          _this = _possibleConstructorReturn(this, _getPrototypeOf(pluginDecoration).call(this, props));

          _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "typeName", void 0);

          _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onClick", function (e, opts) {
            var _this$props = _this.props,
                change = _this$props.change,
                onChange = _this$props.onChange;
            e.preventDefault();
            onChange((0, _slateHelperBlockList.default)(change, opts));
          });

          _this.typeName = _this.props.type || type;
          return _this;
        }

        _createClass(pluginDecoration, [{
          key: "render",
          value: function render() {
            var _this2 = this;

            var _this$props2 = this.props,
                change = _this$props2.change,
                icon = _this$props2.icon,
                rest = _objectWithoutProperties(_this$props2, ["change", "icon"]);

            var typeOpts;

            if (defaultIcon === "ListOrdered") {
              // ol list
              typeOpts = {
                typeOL: this.typeName,
                typeUL: _blocks.UL_LIST,
                typeItem: _blocks.LIST_ITEM,
                ordered: true
              };
            } else if (defaultIcon === "ListBullet") {
              // ul list
              typeOpts = {
                typeUL: this.typeName,
                typeOL: _blocks.OL_LIST,
                typeItem: _blocks.LIST_ITEM,
                ordered: false
              };
            }

            var onClick = function onClick(e) {
              return _this2.onClick(e, typeOpts);
            };

            return (// $FlowFixMe
              React.createElement(Block, _extends({}, rest, {
                type: this.typeName,
                icon: icon || defaultIcon,
                onClick: onClick,
                isActive: isList(change, this.typeName, typeOpts)
              }))
            );
          }
        }]);

        return pluginDecoration;
      }(React.Component)
    );
  };
};

exports.default = _default;