"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LinkPlugin = void 0;

var React = _interopRequireWildcard(require("react"));

var _antd = require("antd");

var _slateIconShared = _interopRequireDefault(require("@canner/slate-icon-shared"));

var _slateHelperInlineLinks = _interopRequireDefault(require("@canner/slate-helper-inline-links"));

var _slateUtilHave = require("@canner/slate-util-have");

var _inlines = require("@canner/slate-constant/lib/inlines");

var _linkNode = _interopRequireDefault(require("@canner/slate-editor-renderer/lib/linkNode"));

var _dec, _class, _class2, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var LinkPlugin = function LinkPlugin(opt) {
  var options = Object.assign({
    type: _inlines.LINK,
    getHref: function getHref(node) {
      return node.data.get("href");
    }
  }, opt);
  return {
    renderNode: function renderNode(props) {
      if (props.node.type === options.type) return (0, _linkNode.default)(options)(props);
    }
  };
};

exports.LinkPlugin = LinkPlugin;
var FormItem = _antd.Form.Item;

var _default = (_dec = _antd.Form.create(), _dec(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Link, _React$Component);

  function Link(props) {
    var _this;

    _classCallCheck(this, Link);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Link).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "typeName", void 0);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onClick", function (e) {
      var _this$props = _this.props,
          change = _this$props.change,
          onChange = _this$props.onChange;
      var haveLinks = (0, _slateUtilHave.haveInlines)(change, _this.typeName);
      if (e) e.preventDefault();

      if (haveLinks) {
        onChange((0, _slateHelperInlineLinks.default)(change, _this.typeName));
      } else if (change.value.isExpanded) {
        // prompt for ask url
        _this.setState({
          showModal: true,
          addLinkText: false
        });
      } else {
        // prompt for url and text
        _this.setState({
          showModal: true,
          addLinkText: true
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClickChange", function (visible) {
      if (!visible) _this.handleCancel();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleCancel", function () {
      _this.props.form.resetFields();

      _this.setState({
        showModal: false,
        addLinkText: false
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleOk", function (e) {
      e.preventDefault();
      var _this$props2 = _this.props,
          onChange = _this$props2.onChange,
          change = _this$props2.change,
          hrefKey = _this$props2.hrefKey,
          textKey = _this$props2.textKey;

      var that = _assertThisInitialized(_assertThisInitialized(_this));

      _this.props.form.validateFields(function (err, values) {
        if (!err) {
          var href = values.href;
          var text = values.text;

          if (href && text) {
            var _links;

            onChange((0, _slateHelperInlineLinks.default)(change, _this.typeName, (_links = {}, _defineProperty(_links, hrefKey, href), _defineProperty(_links, textKey, text), _links)));
          } else if (href) {
            onChange((0, _slateHelperInlineLinks.default)(change, _this.typeName, _defineProperty({}, hrefKey, href)));
          }

          that.handleCancel();
        }
      });
    });

    _this.state = {
      showModal: false,
      addLinkText: false
    };
    _this.typeName = _this.props.type || _inlines.LINK;
    return _this;
  }

  _createClass(Link, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var getFieldDecorator = this.props.form.getFieldDecorator;

      var _this$props3 = this.props,
          change = _this$props3.change,
          icon = _this$props3.icon,
          rest = _objectWithoutProperties(_this$props3, ["change", "icon"]);

      var _this$state = this.state,
          addLinkText = _this$state.addLinkText,
          showModal = _this$state.showModal;

      var onClick = function onClick(e) {
        return _this2.onClick(e);
      };

      var content = React.createElement(_antd.Form, {
        horizontal: "true",
        layout: "inline"
      }, React.createElement(FormItem, {
        label: "Url",
        hasFeedback: true
      }, getFieldDecorator("href", {
        rules: [{
          type: "url",
          message: "The input is not valid url!"
        }, {
          required: true,
          message: "Please input your url"
        }]
      })(React.createElement(_antd.Input, {
        onClick: function onClick(e) {
          return e.preventDefault();
        }
      }))), addLinkText ? React.createElement(FormItem, {
        label: "Text",
        hasFeedback: true
      }, getFieldDecorator("text")(React.createElement(_antd.Input, {
        onClick: function onClick(e) {
          return e.preventDefault();
        }
      }))) : null, React.createElement("div", null, React.createElement(_antd.Button, {
        key: "back",
        type: "ghost",
        onClick: this.handleCancel
      }, "Cancel"), " ", React.createElement(_antd.Button, {
        key: "submit",
        type: "primary",
        onClick: this.handleOk
      }, "Ok")));
      return React.createElement("div", {
        style: {
          display: "inline-block"
        }
      }, React.createElement(_antd.Popover, {
        visible: showModal,
        title: "Add Link",
        trigger: "click",
        content: content,
        onVisibleChange: this.handleClickChange
      }, React.createElement(_slateIconShared.default, _extends({
        type: this.typeName,
        icon: icon || "Link",
        onClick: onClick,
        isActive: (0, _slateUtilHave.haveInlines)(change, this.typeName)
      }, rest))));
    }
  }]);

  return Link;
}(React.Component), _defineProperty(_class2, "defaultProps", {
  hrefKey: "href",
  textKey: "text"
}), _temp)) || _class);

exports.default = _default;