"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TablePlugin = void 0;

var React = _interopRequireWildcard(require("react"));

var _createTablePicker = _interopRequireWildcard(require("create-table-picker"));

var _slateIconShared = _interopRequireDefault(require("@canner/slate-icon-shared"));

var _blocks = require("@canner/slate-constant/lib/blocks");

var _slateEditTable = _interopRequireDefault(require("slate-edit-table"));

var _tableNode = require("@canner/slate-editor-renderer/lib/tableNode");

var _lodash = _interopRequireDefault(require("lodash.omit"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TablePlugin = function TablePlugin(opt) {
  var options = Object.assign(_objectSpread({
    typeTable: _blocks.TABLE,
    typeRow: _blocks.TABLE_ROW,
    typeCell: _blocks.TABLE_CELL
  }, _createTablePicker.nodeAttrs), opt);
  return {
    renderNode: function renderNode(props) {
      if (props.node.type === options.typeTable) return (0, _tableNode.tableNode)(options)(props);else if (props.node.type === options.typeRow) return (0, _tableNode.tableRowNode)()(props);else if (props.node.type === options.typeCell) return (0, _tableNode.tableCellNode)((0, _lodash.default)(options, ["typeTable", "typeRow", "typeCell"]))(props);
    }
  };
};

exports.TablePlugin = TablePlugin;

var Table =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Table, _React$Component);

  function Table(props) {
    var _this;

    _classCallCheck(this, Table);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "typeName", void 0);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onChange", function (data) {
      var _this$props = _this.props,
          change = _this$props.change,
          onChange = _this$props.onChange;
      onChange(_this.editTable.changes.insertTable(change, data.columnNumber + 1, data.rowNumber + 1));
    });

    _this.typeName = _this.props.typeTable || _blocks.TABLE;
    _this.editTable = (0, _slateEditTable.default)(_this.props.options || {});
    return _this;
  }

  _createClass(Table, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          icon = _this$props2.icon,
          rest = _objectWithoutProperties(_this$props2, ["icon"]);

      return React.createElement(_createTablePicker.default, {
        style: {
          zIndex: 1000
        },
        onChange: this.onChange
      }, React.createElement(_slateIconShared.default, _extends({
        type: this.typeName,
        icon: icon || "Table",
        isActive: false
      }, rest)));
    }
  }]);

  return Table;
}(React.Component);

exports.default = Table;