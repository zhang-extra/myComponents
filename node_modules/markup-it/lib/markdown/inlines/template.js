'use strict';

var _require = require('../../'),
    Serializer = _require.Serializer,
    Deserializer = _require.Deserializer,
    Inline = _require.Inline,
    INLINES = _require.INLINES;

var reInline = require('../re/inline');

/**
 * Serialize a template node to markdown
 * @type {Serializer}
 */
var serialize = Serializer().matchType(INLINES.TEMPLATE).then(function (state) {
    var node = state.peek();
    var data = node.data;


    var type = data.get('type');
    var text = data.get('text');

    var output = void 0;

    if (type == 'expr') output = '{% ' + text + ' %}';else if (type == 'comment') output = '{# ' + text + ' #}';else if (type == 'var') output = '{{ ' + text + ' }}';

    return state.shift().write(output);
});

/**
 * Deserialize a template tag.
 * @type {Deserializer}
 */
var deserialize = Deserializer().matchRegExp(reInline.template, function (state, match) {
    if (state.getProp('template') === false) {
        return;
    }

    var type = match[1];
    var text = match[2];

    if (type == '%') type = 'expr';else if (type == '#') type = 'comment';else if (type == '{') type = 'var';

    var node = Inline.create({
        type: INLINES.TEMPLATE,
        isVoid: true,
        data: {
            type: type,
            text: text
        }
    });

    return state.push(node);
});

module.exports = { serialize: serialize, deserialize: deserialize };